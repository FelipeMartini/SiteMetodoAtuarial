{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Instalar dependências",
      "type": "shell",
      "command": "npm install",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Backup node_modules e lock",
      "type": "shell",
      "command": "tar czf backup_node_modules_$(date +%Y%m%d%H%M%S).tar.gz node_modules package-lock.json || true",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "silent",
        "panel": "shared"
      }
    },
    {
      "label": "Atualizar dependências",
      "type": "shell",
      "command": "npm update",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Limpeza-Geral",
      "type": "shell",
      "command": "echo 'Iniciando Limpeza-Geral...' && rm -rf .next node_modules package-lock.json && npm cache clean --force && npm install && npx prisma generate --schema=./src/prisma/schema.prisma && echo 'Limpeza-Geral concluída.'",
      "options": { "cwd": "${workspaceFolder}/site-metodo" },
      "group": "build",
      "presentation": { "reveal": "always", "panel": "dedicated", "clear": true }
    },
    {
      "label": "Diagnóstico: Checar ambiente Node/Prisma",
      "type": "shell",
      "command": "echo 'Node:' && node -v && echo 'NPM:' && npm -v && echo 'Prisma:' && npx prisma -v && echo 'Variáveis .env:' && cat .env || echo 'Arquivo .env não encontrado'",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Diagnóstico: Mostrar logs de build",
      "type": "shell",
      "command": "cat ../../XLOGS/build-errores.log || echo 'Log não encontrado'",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Prisma Generate Absoluto",
      "type": "shell",
      "command": "npx prisma generate --schema=./src/prisma/schema.prisma",
      "options": { "cwd": "${workspaceFolder}/site-metodo" },
      "group": "build",
      "presentation": { "reveal": "always", "panel": "dedicated" }
    },
    {
      "label": "Segurança: npm audit fix",
      "type": "shell",
      "command": "npm audit fix --force || npm audit || true",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Atualizar shadcn/ui",
      "type": "shell",
      "command": "npx shadcn-ui@latest upgrade || echo 'shadcn/ui não instalado'",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Lint Absoluto",
      "type": "shell",
      "command": "npm run lint",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Type Check Absoluto",
      "type": "shell",
      "command": "npm run type-check",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Build Next.js Absoluto",
      "type": "shell",
      "command": "npm run build",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Prisma Generate Absoluto",
      "type": "shell",
      "command": "npm run prisma:generate",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Iniciar Next.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done; npm run dev",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "isBackground": true,
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Iniciar Next.js Seguro",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done && sleep 2 && npm run dev",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "isBackground": true,
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Reiniciar Next.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done; npm run dev",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "isBackground": true,
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Parar Next.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Finalizar todas as instâncias Node.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Finalizar servidores Next.js (portas 3000-3010)",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Cobertura de Testes",
      "type": "shell",
      "command": "npx jest --coverage",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Smoke Test Next.js",
      "type": "shell",
      "command": "npm run test:smoke || echo 'Smoke test não implementado'",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Build Completo Seguro",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Diagnóstico: Checar ambiente Node/Prisma",
        "Backup node_modules e lock",
        "Limpeza-Geral",
        "Instalar dependências",
        "Atualizar dependências",
        "Segurança: npm audit fix",
        "Build Next.js Absoluto",
        "Prisma Generate Absoluto",
        "Lint Absoluto",
        "Type Check Absoluto",
        "Cobertura de Testes"
      ],
      "runOptions": {
        "reevaluateOnRerun": true
      }
    },
    {
      "label": "Start Seguro",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Build Completo Seguro",
        "Iniciar Next.js Seguro"
      ],
      "runOptions": {
        "reevaluateOnRerun": true
      }
    }
  ]
}