{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Changelog/Versionamento/Push Automático (mensagem automática)",
      "type": "shell",
      "command": "mkdir -p \"${workspaceFolder}/XLOGS\" && chmod +x \"${workspaceFolder}/scripts/git-auto.sh\" && \"${workspaceFolder}/scripts/git-auto.sh\" 2>&1 | tee \"${workspaceFolder}/XLOGS/git-auto-$(date +'%Y%m%d-%H%M%S').log\"",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Instalar dependências",
      "type": "shell",
      "command": "mkdir -p \"${workspaceFolder}/XLOGS\" && npm install 2>&1 | tee \"${workspaceFolder}/XLOGS/install-$(date +'%Y%m%d-%H%M%S').log\"",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Atualizar dependências",
      "type": "shell",
      "command": "mkdir -p \"${workspaceFolder}/XLOGS\" && npm update 2>&1 | tee \"${workspaceFolder}/XLOGS/update-$(date +'%Y%m%d-%H%M%S').log\"",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Limpeza-Geral",
      "type": "shell",
  "command": "mkdir -p \"${workspaceFolder}/XLOGS\" && echo 'Iniciando Limpeza-Geral...' && rm -rf .next node_modules package-lock.json && npm cache clean --force && npm install && npx prisma generate --schema=./prisma/schema.prisma && echo 'Limpeza-Geral concluída.' 2>&1 | tee \"${workspaceFolder}/XLOGS/limpeza-geral-$(date +'%Y%m%d-%H%M%S').log\"",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Executar comando Seguro",
      "type": "shell",
      "command": "mkdir -p \"${workspaceFolder}/XLOGS\" && chmod +x \"${workspaceFolder}/scripts/exec-comando.sh\" && \"${workspaceFolder}/scripts/exec-comando.sh\" 'ls -la' 2>&1 | tee \"${workspaceFolder}/XLOGS/exec-comando-seguro-$(date +'%Y%m%d-%H%M%S').log\"",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Atualizar shadcn/ui",
      "type": "shell",
      "command": "npx shadcn-ui@latest upgrade || echo 'shadcn/ui não instalado' 2>&1 | tee ../../XLOGS/atualizar-shadcn-ui-$(date +'%Y%m%d-%H%M%S').log",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Lint Absoluto",
      "type": "shell",
      "command": "mkdir -p \"${workspaceFolder}/XLOGS\" && npm run lint 2>&1 | tee \"${workspaceFolder}/XLOGS/lint-absoluto-$(date +'%Y%m%d-%H%M%S').log\"",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Type Check Absoluto",
      "type": "shell",
      "command": "npm run type-check",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Build Next.js Absoluto",
      "type": "shell",
      "command": "npm run build",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Prisma Generate Absoluto",
      "type": "shell",
      "command": "npm run prisma:generate 2>&1 | tee ../../XLOGS/prisma-generate-absoluto-$(date +'%Y%m%d-%H%M%S').log",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Iniciar Next.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done; npm run dev",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "isBackground": true,
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Iniciar Next.js Seguro",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done && sleep 2 && npm run dev",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "isBackground": true,
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Reiniciar Next.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done; npm run dev",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "isBackground": true,
      "group": "build",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Parar Next.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Finalizar todas as instâncias Node.js",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Finalizar servidores Next.js (portas 3000-3010)",
      "type": "shell",
      "command": "for porta in {3000..3010}; do fuser -k $porta/tcp; done",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Cobertura de Testes",
      "type": "shell",
      "command": "npx jest --coverage",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "problemMatcher": [
        "$tsc"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Smoke Test Next.js",
      "type": "shell",
      "command": "npm run test:smoke || echo 'Smoke test não implementado' 2>&1 | tee ../../XLOGS/smoke-test-nextjs-$(date +'%Y%m%d-%H%M%S').log",
      "options": {
        "cwd": "${workspaceFolder}/site-metodo"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Build Completo Seguro",
      "type": "shell",
      "dependsOrder": "sequence",
      "command": "echo 'Build seguro completo (ajuste conforme necessário)'",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Dependências: Instalar (ci/padrão)",
      "type": "shell",
      "command": "chmod +x \"${workspaceFolder}/scripts/depend-install.sh\" && \"${workspaceFolder}/scripts/depend-install.sh\" ${input:dependInstallModo} 2>&1 | tee ../../XLOGS/dependencias-instalar-$(date +'%Y%m%d-%H%M%S').log",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      }
    }
  ],
  "inputs": [
    {
      "id": "dependInstallModo",
      "type": "pickString",
      "description": "Modo de instalação de dependências",
      "options": [
        "ci",
        "install"
      ],
      "default": "ci"
    }
  ]
}