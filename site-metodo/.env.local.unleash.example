# Exemplo de configuração para Unleash (feature flags)
# Copie/cole em .env.local e ajuste os valores para habilitar o cliente Unleash no frontend.
# Se você não quer usar Unleash em desenvolvimento, deixe essas variáveis vazias ou remova-as.

# URL pública do proxy/frontend do Unleash que o SDK consulta (frontend)
# Ex.: http://localhost:4242/api/frontend
NEXT_PUBLIC_UNLEASH_FRONTEND_API_URL=http://localhost:4242/api/frontend

# Token público do frontend (protegido por CORS no Unleash)
NEXT_PUBLIC_UNLEASH_FRONTEND_API_TOKEN=seu_token_frontend

# Nome do app registrado no Unleash
NEXT_PUBLIC_UNLEASH_APP_NAME=site-metodo

# (Opcional) URL/Token do servidor Unleash (para backend)
# UNLEASH_SERVER_API_URL=http://localhost:4242/api
# UNLEASH_SERVER_API_TOKEN=seu_token_backend

# Instruções rápidas para rodar Unleash local com Docker Compose:
# 1) Crie um diretório temporário e um docker-compose.yml com a configuração oficial
#    See: https://docs.getunleash.io/docs/getting-started/docker
# 2) Exemplo mínimo (execute em outro terminal):
#
# version: '3.8'
# services:
#   unleash:
#     image: unleashorg/unleash-server:4.5.0
#     environment:
#       - DATABASE_URL=postgresql://unleash:password@db:5432/unleash
#       - DATABASE_SSL=false
#       - UNLEASH_BASE_URI=http://localhost:4242
#     ports:
#       - 4242:4242
#   db:
#     image: postgres:15
#     environment:
#       - POSTGRES_USER=unleash
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=unleash
#     volumes:
#       - unleash_db:/var/lib/postgresql/data
# volumes:
#   unleash_db:
#
# 3) Acesse http://localhost:4242 e crie um frontend token e um app com o nome `site-metodo`.
# 4) Copie o token para NEXT_PUBLIC_UNLEASH_FRONTEND_API_TOKEN e reinicie o Next dev.

# Se você preferir não rodar o Unleash local, deixe as variáveis em branco e o
# `FeatureFlagProvider` no projeto evitará inicializar o SDK, suprimindo os
# erros de rede para localhost:4242.
