/**
 * Script para configurar pol√≠ticas ABAC b√°sicas
 * Configura felipemartinii@gmail.com como super admin
 */

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function setupABACPolicies() {
  console.log('üöÄ Configurando pol√≠ticas ABAC...')

  try {
    // Limpar pol√≠ticas existentes
    await prisma.casbinRule.deleteMany({})
    console.log('‚úÖ Pol√≠ticas antigas removidas')

    // Pol√≠ticas para felipemartinii@gmail.com - Super Admin
    const adminPolicies = [
      // Acesso completo ao sistema
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: '*', v2: '*' },
      
      // Acesso espec√≠fico para sess√µes
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'session:read', v2: 'read' },
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'session:write', v2: 'write' },
      
      // Acesso administrativo
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'admin:dashboard', v2: 'read' },
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'admin:users', v2: 'read' },
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'admin:users', v2: 'write' },
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'admin:abac', v2: 'read' },
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'admin:abac', v2: 'write' },
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'audit_logs', v2: 'read' },
      
      // √Årea do cliente
      { ptype: 'p', v0: 'felipemartinii@gmail.com', v1: 'area-cliente', v2: 'read' },
    ]

    // Inserir pol√≠ticas
    for (const policy of adminPolicies) {
      await prisma.casbinRule.create({ data: policy })
      console.log(`‚úÖ Pol√≠tica criada: ${policy.v0} -> ${policy.v1} ${policy.v2}`)
    }

  // Nota: removemos pol√≠ticas 'user:*' (RBAC) para for√ßar uso estrito por
  // email (ABAC puro). Se desejar pol√≠ticas que permitam leitura de sess√£o
  // por qualquer usu√°rio, crie pol√≠ticas expl√≠citas por email ou por
  // atributos contextuais.

    console.log('üéâ Pol√≠ticas ABAC configuradas com sucesso!')

  } catch (error) {
    console.error('‚ùå Erro ao configurar pol√≠ticas ABAC:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  setupABACPolicies()
}

export { setupABACPolicies }
