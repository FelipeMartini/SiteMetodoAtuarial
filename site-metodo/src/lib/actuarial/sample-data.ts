/**
 * Dados de exemplo de tabelas de mortalidade brasileiras
 * Baseado em dados reais das tábuas BR-EMS e AT-2000
 */

import { MortalityTable } from './calculations'

/**
 * Tabela de mortalidade brasileira simplificada (BR-EMS adaptada)
 * Dados aproximados para fins de demonstração
 */
export const BR_EMS_MALE_2020: MortalityTable = {
  name: 'BR-EMS-2020-MALE',
  description:
    'Tábua de Mortalidade Brasileira - Experiência de Mercado de Seguros 2020 - Masculina',
  country: 'Brasil',
  year: 2020,
  gender: 'male',
  entries: [
    { age: 18, qx: 0.001523 },
    { age: 19, qx: 0.001598 },
    { age: 20, qx: 0.001674 },
    { age: 21, qx: 0.001752 },
    { age: 22, qx: 0.001831 },
    { age: 23, qx: 0.001912 },
    { age: 24, qx: 0.001995 },
    { age: 25, qx: 0.00208 },
    { age: 26, qx: 0.002167 },
    { age: 27, qx: 0.002257 },
    { age: 28, qx: 0.002349 },
    { age: 29, qx: 0.002444 },
    { age: 30, qx: 0.002541 },
    { age: 31, qx: 0.002641 },
    { age: 32, qx: 0.002744 },
    { age: 33, qx: 0.00285 },
    { age: 34, qx: 0.002959 },
    { age: 35, qx: 0.003071 },
    { age: 36, qx: 0.003187 },
    { age: 37, qx: 0.003306 },
    { age: 38, qx: 0.003429 },
    { age: 39, qx: 0.003556 },
    { age: 40, qx: 0.003686 },
    { age: 41, qx: 0.003821 },
    { age: 42, qx: 0.00396 },
    { age: 43, qx: 0.004104 },
    { age: 44, qx: 0.004252 },
    { age: 45, qx: 0.004405 },
    { age: 46, qx: 0.004563 },
    { age: 47, qx: 0.004726 },
    { age: 48, qx: 0.004894 },
    { age: 49, qx: 0.005068 },
    { age: 50, qx: 0.005247 },
    { age: 51, qx: 0.005432 },
    { age: 52, qx: 0.005623 },
    { age: 53, qx: 0.00582 },
    { age: 54, qx: 0.006024 },
    { age: 55, qx: 0.006234 },
    { age: 56, qx: 0.006451 },
    { age: 57, qx: 0.006675 },
    { age: 58, qx: 0.006907 },
    { age: 59, qx: 0.007146 },
    { age: 60, qx: 0.007393 },
    { age: 61, qx: 0.007648 },
    { age: 62, qx: 0.007912 },
    { age: 63, qx: 0.008184 },
    { age: 64, qx: 0.008465 },
    { age: 65, qx: 0.008755 },
    { age: 66, qx: 0.009055 },
    { age: 67, qx: 0.009364 },
    { age: 68, qx: 0.009683 },
    { age: 69, qx: 0.010013 },
    { age: 70, qx: 0.010353 },
    { age: 71, qx: 0.010704 },
    { age: 72, qx: 0.011066 },
    { age: 73, qx: 0.01144 },
    { age: 74, qx: 0.011825 },
    { age: 75, qx: 0.012223 },
    { age: 76, qx: 0.012633 },
    { age: 77, qx: 0.013056 },
    { age: 78, qx: 0.013492 },
    { age: 79, qx: 0.013942 },
    { age: 80, qx: 0.014405 },
    { age: 81, qx: 0.014883 },
    { age: 82, qx: 0.015375 },
    { age: 83, qx: 0.015882 },
    { age: 84, qx: 0.016404 },
    { age: 85, qx: 0.016942 },
    { age: 86, qx: 0.017496 },
    { age: 87, qx: 0.018066 },
    { age: 88, qx: 0.018653 },
    { age: 89, qx: 0.019258 },
    { age: 90, qx: 0.01988 },
    { age: 91, qx: 0.02052 },
    { age: 92, qx: 0.021179 },
    { age: 93, qx: 0.021857 },
    { age: 94, qx: 0.022555 },
    { age: 95, qx: 0.023273 },
    { age: 96, qx: 0.024012 },
    { age: 97, qx: 0.024772 },
    { age: 98, qx: 0.025554 },
    { age: 99, qx: 0.026358 },
    { age: 100, qx: 1.0 },
  ],
}

export const BR_EMS_FEMALE_2020: MortalityTable = {
  name: 'BR-EMS-2020-FEMALE',
  description:
    'Tábua de Mortalidade Brasileira - Experiência de Mercado de Seguros 2020 - Feminina',
  country: 'Brasil',
  year: 2020,
  gender: 'female',
  entries: [
    { age: 18, qx: 0.000687 },
    { age: 19, qx: 0.000708 },
    { age: 20, qx: 0.00073 },
    { age: 21, qx: 0.000752 },
    { age: 22, qx: 0.000775 },
    { age: 23, qx: 0.000799 },
    { age: 24, qx: 0.000823 },
    { age: 25, qx: 0.000848 },
    { age: 26, qx: 0.000873 },
    { age: 27, qx: 0.0009 },
    { age: 28, qx: 0.000927 },
    { age: 29, qx: 0.000955 },
    { age: 30, qx: 0.000984 },
    { age: 31, qx: 0.001013 },
    { age: 32, qx: 0.001044 },
    { age: 33, qx: 0.001075 },
    { age: 34, qx: 0.001107 },
    { age: 35, qx: 0.00114 },
    { age: 36, qx: 0.001174 },
    { age: 37, qx: 0.001209 },
    { age: 38, qx: 0.001245 },
    { age: 39, qx: 0.001282 },
    { age: 40, qx: 0.00132 },
    { age: 41, qx: 0.001359 },
    { age: 42, qx: 0.001399 },
    { age: 43, qx: 0.00144 },
    { age: 44, qx: 0.001483 },
    { age: 45, qx: 0.001527 },
    { age: 46, qx: 0.001572 },
    { age: 47, qx: 0.001618 },
    { age: 48, qx: 0.001665 },
    { age: 49, qx: 0.001714 },
    { age: 50, qx: 0.001765 },
    { age: 51, qx: 0.001817 },
    { age: 52, qx: 0.00187 },
    { age: 53, qx: 0.001925 },
    { age: 54, qx: 0.001982 },
    { age: 55, qx: 0.00204 },
    { age: 56, qx: 0.0021 },
    { age: 57, qx: 0.002162 },
    { age: 58, qx: 0.002226 },
    { age: 59, qx: 0.002291 },
    { age: 60, qx: 0.002359 },
    { age: 61, qx: 0.002428 },
    { age: 62, qx: 0.002499 },
    { age: 63, qx: 0.002573 },
    { age: 64, qx: 0.002648 },
    { age: 65, qx: 0.002726 },
    { age: 66, qx: 0.002806 },
    { age: 67, qx: 0.002888 },
    { age: 68, qx: 0.002973 },
    { age: 69, qx: 0.00306 },
    { age: 70, qx: 0.003149 },
    { age: 71, qx: 0.003241 },
    { age: 72, qx: 0.003336 },
    { age: 73, qx: 0.003433 },
    { age: 74, qx: 0.003533 },
    { age: 75, qx: 0.003636 },
    { age: 76, qx: 0.003742 },
    { age: 77, qx: 0.003851 },
    { age: 78, qx: 0.003963 },
    { age: 79, qx: 0.004078 },
    { age: 80, qx: 0.004197 },
    { age: 81, qx: 0.004319 },
    { age: 82, qx: 0.004444 },
    { age: 83, qx: 0.004573 },
    { age: 84, qx: 0.004705 },
    { age: 85, qx: 0.004841 },
    { age: 86, qx: 0.004981 },
    { age: 87, qx: 0.005125 },
    { age: 88, qx: 0.005273 },
    { age: 89, qx: 0.005425 },
    { age: 90, qx: 0.005582 },
    { age: 91, qx: 0.005743 },
    { age: 92, qx: 0.005908 },
    { age: 93, qx: 0.006079 },
    { age: 94, qx: 0.006254 },
    { age: 95, qx: 0.006434 },
    { age: 96, qx: 0.00662 },
    { age: 97, qx: 0.006811 },
    { age: 98, qx: 0.007008 },
    { age: 99, qx: 0.007211 },
    { age: 100, qx: 1.0 },
  ],
}

/**
 * Tabela de mortalidade para invalidez (simplificada)
 */
export const BR_DISABILITY_2020: MortalityTable = {
  name: 'BR-DISABILITY-2020',
  description: 'Tábua de Mortalidade para Pessoas com Invalidez - Brasil 2020',
  country: 'Brasil',
  year: 2020,
  gender: 'unisex',
  entries: [
    { age: 18, qx: 0.0025 },
    { age: 19, qx: 0.00255 },
    { age: 20, qx: 0.0026 },
    { age: 21, qx: 0.00265 },
    { age: 22, qx: 0.0027 },
    { age: 23, qx: 0.00275 },
    { age: 24, qx: 0.0028 },
    { age: 25, qx: 0.00285 },
    { age: 26, qx: 0.0029 },
    { age: 27, qx: 0.00295 },
    { age: 28, qx: 0.003 },
    { age: 29, qx: 0.00305 },
    { age: 30, qx: 0.0031 },
    { age: 31, qx: 0.0032 },
    { age: 32, qx: 0.0033 },
    { age: 33, qx: 0.0034 },
    { age: 34, qx: 0.0035 },
    { age: 35, qx: 0.0036 },
    { age: 36, qx: 0.00375 },
    { age: 37, qx: 0.0039 },
    { age: 38, qx: 0.00405 },
    { age: 39, qx: 0.0042 },
    { age: 40, qx: 0.00435 },
    { age: 41, qx: 0.00455 },
    { age: 42, qx: 0.00475 },
    { age: 43, qx: 0.00495 },
    { age: 44, qx: 0.00515 },
    { age: 45, qx: 0.00535 },
    { age: 46, qx: 0.0056 },
    { age: 47, qx: 0.00585 },
    { age: 48, qx: 0.0061 },
    { age: 49, qx: 0.00635 },
    { age: 50, qx: 0.0066 },
    { age: 51, qx: 0.0069 },
    { age: 52, qx: 0.0072 },
    { age: 53, qx: 0.0075 },
    { age: 54, qx: 0.0078 },
    { age: 55, qx: 0.0081 },
    { age: 56, qx: 0.00845 },
    { age: 57, qx: 0.0088 },
    { age: 58, qx: 0.00915 },
    { age: 59, qx: 0.0095 },
    { age: 60, qx: 0.00985 },
    { age: 61, qx: 0.01025 },
    { age: 62, qx: 0.01065 },
    { age: 63, qx: 0.01105 },
    { age: 64, qx: 0.01145 },
    { age: 65, qx: 0.01185 },
    { age: 66, qx: 0.0123 },
    { age: 67, qx: 0.01275 },
    { age: 68, qx: 0.0132 },
    { age: 69, qx: 0.01365 },
    { age: 70, qx: 0.0141 },
    { age: 71, qx: 0.0146 },
    { age: 72, qx: 0.0151 },
    { age: 73, qx: 0.0156 },
    { age: 74, qx: 0.0161 },
    { age: 75, qx: 0.0166 },
    { age: 76, qx: 0.01715 },
    { age: 77, qx: 0.0177 },
    { age: 78, qx: 0.01825 },
    { age: 79, qx: 0.0188 },
    { age: 80, qx: 0.01935 },
    { age: 81, qx: 0.01995 },
    { age: 82, qx: 0.02055 },
    { age: 83, qx: 0.02115 },
    { age: 84, qx: 0.02175 },
    { age: 85, qx: 0.02235 },
    { age: 86, qx: 0.023 },
    { age: 87, qx: 0.02365 },
    { age: 88, qx: 0.0243 },
    { age: 89, qx: 0.02495 },
    { age: 90, qx: 0.0256 },
    { age: 91, qx: 0.0263 },
    { age: 92, qx: 0.027 },
    { age: 93, qx: 0.0277 },
    { age: 94, qx: 0.0284 },
    { age: 95, qx: 0.0291 },
    { age: 96, qx: 0.02985 },
    { age: 97, qx: 0.0306 },
    { age: 98, qx: 0.03135 },
    { age: 99, qx: 0.0321 },
    { age: 100, qx: 1.0 },
  ],
}

/**
 * Exemplo de dados para teste de cálculos
 */
export const EXAMPLE_LIFE_INSURANCE = {
  age: 35,
  insuranceAmount: 100000,
  premiumPaymentPeriod: 20,
  interestRate: 0.06,
  mortalityTable: BR_EMS_MALE_2020,
  loading: 0.15,
}

export const EXAMPLE_ANNUITY = {
  age: 65,
  annuityAmount: 2000,
  paymentFrequency: 12,
  interestRate: 0.05,
  mortalityTable: BR_EMS_FEMALE_2020,
  immediateStart: true,
}

/**
 * Lista de todas as tabelas disponíveis
 */
export const AVAILABLE_TABLES = [BR_EMS_MALE_2020, BR_EMS_FEMALE_2020, BR_DISABILITY_2020]

/**
 * Função utilitária para obter uma tabela por nome
 */
export function getTableByName(name: string): MortalityTable | undefined {
  return AVAILABLE_TABLES.find(table => table.name === name)
}

/**
 * Função para obter tabelas por país
 */
export function getTablesByCountry(country: string): MortalityTable[] {
  return AVAILABLE_TABLES.filter(table => table.country.toLowerCase() === country.toLowerCase())
}
